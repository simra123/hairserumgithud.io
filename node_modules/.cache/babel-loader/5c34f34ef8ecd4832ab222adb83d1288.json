{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\horribleSubs\\\\leviAcker\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './ToDolist.css';\nimport ToDolist from './ToDolist';\nimport { db } from './fire';\nimport firebase from 'firebase';\n\nconst App = () => {\n  _s();\n\n  const [addItem, setAddItem] = useState([]);\n  const [printItem, setPrintItem] = useState([]);\n\n  const addEvent = pass => {\n    setAddItem(pass.target.value);\n  };\n\n  const PrintItemF = () => {\n    // getPItem((prevval) => {\n    //   return [...prevval , addItem ]\n    // });\n    const todoRef = firebase.database().ref('task');\n    const add = {\n      todo: addItem\n    };\n    todoRef.push(add);\n    setAddItem('');\n  };\n\n  useEffect(() => {\n    const todo = firebase.database().ref('task');\n    todo.on('value', snapshot => {\n      const printItem = [];\n      const todo = snapshot.val();\n\n      for (let id in todo) {\n        printItem.push(todo[id]);\n      }\n\n      console.log(id);\n      setPrintItem(printItem);\n    });\n  }, []);\n\n  const deleteFunc = id => {// getPItem((delval) =>{\n    //   return delval.filter((currdata , index) =>{\n    //     return index !== id\n    //   })\n    // })\n    //console.log(id)\n  };\n\n  const deleteTodo = () => {\n    const todoRef = firebase.database().ref('task').child('/task/');\n    todoRef.remove();\n    console.log(todoRef);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-div\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ToDo list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"add an item\",\n        onChange: addEvent,\n        value: addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fas fa-plus-circle\",\n        on: true,\n        onClick: PrintItemF\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: printItem.length > 0 ? printItem.map((val, index) => {\n          return /*#__PURE__*/_jsxDEV(ToDolist, {\n            text: val.todo\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this);\n        }) : \"No List Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this) //  printItem.map((val , index) => {\n  //  return (\n  //    <ToDolist \n  //     key = {index}\n  //     id = {index} \n  //     text = {val}\n  //     onSelect = {deleteFunc} />)\n  //  })\n  ;\n};\n\n_s(App, \"3w/4LGnM7TIYTdWMPPhQ8pqz9go=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/horribleSubs/leviAcker/src/App.jsx"],"names":["React","useEffect","useState","ToDolist","db","firebase","App","addItem","setAddItem","printItem","setPrintItem","addEvent","pass","target","value","PrintItemF","todoRef","database","ref","add","todo","push","on","snapshot","val","id","console","log","deleteFunc","deleteTodo","child","remove","length","map","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './ToDolist.css';\nimport ToDolist from './ToDolist';\nimport {db} from './fire';\nimport  firebase from 'firebase'\n\n\n\n\nconst App = () => {\n  const [addItem , setAddItem ] = useState([]);\nconst  [printItem , setPrintItem ] = useState([]);\n\n\n \n  const addEvent = (pass) => {\n    setAddItem(pass.target.value);\n  }\n  const PrintItemF = () => {\n    // getPItem((prevval) => {\n    //   return [...prevval , addItem ]\n    // });\n    \n\n    const todoRef = firebase.database().ref('task')\n    const add = {\n      todo : addItem ,\n      \n    }\n    todoRef.push(add)\n    setAddItem('')\n    \n   \n  }\n  \n useEffect(() => {\n  const todo = firebase.database().ref('task');\n   todo.on('value' , (snapshot) => {\n\n      const printItem = []\n      const todo = snapshot.val()\n      for (let id in todo){\n        printItem.push(todo[id])\n       \n      } console.log(id)\n       setPrintItem(printItem)\n     \n  });\n   \n }, []) \n    \n  \n  \n  const deleteFunc = (id) => {\n    // getPItem((delval) =>{\n    //   return delval.filter((currdata , index) =>{\n    //     return index !== id\n    //   })\n    // })\n    //console.log(id)\n  } \n  const deleteTodo = () => {\n    const todoRef = firebase.database().ref('task').child('/task/')\n    todoRef.remove()\n    console.log(todoRef)\n  }\nreturn (\n  <div className=\"main-div\">\n    <div className=\"center-div\">\n      <h1>ToDo list</h1>\n      <input \n       type=\"text\" \n       placeholder=\"add an item\" \n       onChange={addEvent} \n       value={addItem}\n       />\n      <i class=\"fas fa-plus-circle\" on onClick={PrintItemF}></i>\n      \n      <ol>\n        {  \n        printItem.length > 0 ? printItem.map((val , index) => {\n         return ( <ToDolist\n             text = {val.todo}\n             key = {index}/>\n        ) \n        }) : \"No List Found\"\n      }\n      </ol>\n     \n     </div>\n   </div>\n\n          //  printItem.map((val , index) => {\n          //  return (\n          //    <ToDolist \n          //     key = {index}\n          //     id = {index} \n          //     text = {val}\n          //     onSelect = {deleteFunc} />)\n          //  })\n          \n        \n       \n       \n)\n\n\n}\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}